import React, { useState } from "react";
import styled from "styled-components";
import { Button } from "@material-ui/core";
import { ConfiguratorFilter, Filters } from "./Filters";
import { Editor } from "./Editor";
import i18n from "@eyeseetea/d2-ui-components/locales";
import { useAutogenEditor } from "./useAutogenEditor";
import { useAutogenSchema } from "./useAutogenSchema";

const AutogeneratedFormConfigurator: React.FC = () => {
    const [filters, setFilters] = useState(() => getEmptyDataValuesFilter());
    const { dataSetId } = filters;

    const { dsCode } = useAutogenSchema(dataSetId);
    const { disableSave, jsonValue, handleEditorValidation, saveConfig, setJSONValue } = useAutogenEditor(dsCode);

    return (
        <Container>
            <Filters values={filters} onChange={setFilters} />

            <Editor
                handleEditorValidation={handleEditorValidation}
                json={jsonValue}
                onChange={setJSONValue}
                dataSetId={dataSetId}
            />

            <ButtonGroup>
                <Button color="primary" variant="contained" onClick={saveConfig} disabled={disableSave}>
                    {i18n.t("Save")}
                </Button>
                <Button onClick={() => setJSONValue("{}")} color="default" variant="contained">
                    {i18n.t("Clear")}
                </Button>
            </ButtonGroup>
        </Container>
    );
};

export default React.memo(AutogeneratedFormConfigurator);

const Container = styled.div`
    padding: 20px;
`;

const ButtonGroup = styled.div`
    width: 50%;
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 0 1rem;
`;

function getEmptyDataValuesFilter(): ConfiguratorFilter {
    return {
        dataSetId: "",
    };
}

import { defaultObjectProperties, mergeArrayWithSchema, textSchema } from "..";
import { DataElementSchema } from "../../../../../domain/autogenerated-forms-configurator/entities/DataElement";
import { SectionSchema } from "../../../../../domain/autogenerated-forms-configurator/entities/Section";
import { sectionSchema } from "./section";

export const viewTypes = [
    "table",
    "grid",
    "grid-with-totals",
    "grid-with-combos",
    "grid-with-cat-option-combos",
    "matrix-grid",
    "grid-with-periods",
    "grid-with-subnational-ous",
];

export const getDataSetSchema = (
    constantCodes: string[],
    dataSetCode: string,
    dataElements: DataElementSchema[],
    sections: SectionSchema[]
) => {
    const sectionCodes = sections.map(section => section.code);

    return defaultObjectProperties({
        properties: {
            [dataSetCode]: defaultObjectProperties({
                properties: {
                    sections: defaultObjectProperties({
                        properties: mergeArrayWithSchema(
                            sectionCodes,
                            sectionSchema(sections, dataElements, constantCodes)
                        ),
                    }),
                    texts: {
                        properties: {
                            footer: textSchema(constantCodes),
                            header: textSchema(constantCodes),
                            rowTotals: textSchema(constantCodes),
                            totals: textSchema(constantCodes),
                            name: textSchema(constantCodes),
                        },
                    },
                    viewType: {
                        enum: viewTypes,
                    },
                    disableComments: {
                        type: "boolean",
                    },
                },
            }),
        },
    });
};

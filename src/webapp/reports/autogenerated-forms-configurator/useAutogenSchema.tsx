import { useState, useEffect } from "react";
import { DataSet, AutogenConfigSchema } from "../../../domain/autogenerated-forms-configurator/entities/DataSet";
import { useAppContext } from "../../contexts/app-context";

interface AutogenSchema extends AutogenConfigSchema {
    dataSets: DataSet[];
}

export function useAutogenSchema(dataSetId: string): AutogenSchema {
    const { compositionRoot } = useAppContext();

    const [autogenSchema, setAutogenSchema] = useState<AutogenConfigSchema>(getEmptyAutogenSchema());
    const [dataSets, setDataSets] = useState<DataSet[]>([]);

    useEffect(() => {
        compositionRoot.dataStoreConfig.getDataSets().then(dataSets => setDataSets(dataSets));
    }, [compositionRoot.dataStoreConfig]);

    useEffect(() => {
        compositionRoot.dataStoreConfig.getSelectedDataSet(dataSets, dataSetId).then(dataSet => {
            setAutogenSchema(dataSet);
        });
    }, [compositionRoot.dataStoreConfig, dataSetId, dataSets]);

    return { ...autogenSchema, dataSets: dataSets };
}

function getEmptyAutogenSchema(): AutogenConfigSchema {
    return {
        dsCode: "",
        sectionCodes: [],
        categoryComboCodes: [],
        dataElements: [],
        constants: [],
    };
}

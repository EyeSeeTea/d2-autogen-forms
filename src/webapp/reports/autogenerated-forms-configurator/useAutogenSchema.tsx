import { useState, useEffect } from "react";
import { DataSet, AutogenConfigSchema } from "../../../domain/autogenerated-forms-configurator/entities/DataSet";
import { useAppContext } from "../../contexts/app-context";
import { Code } from "../../../domain/common/entities/Base";

interface AutogenSchemaProps extends AutogenConfigSchema {
    dataSets: DataSet[];
}

export function useAutogenSchema(dataSetCode: Code): AutogenSchemaProps {
    const { compositionRoot } = useAppContext();

    const [autogenSchema, setAutogenSchema] = useState<AutogenConfigSchema>(getEmptyAutogenSchema());
    const [dataSets, setDataSets] = useState<DataSet[]>([]);

    useEffect(() => {
        compositionRoot.dataStoreConfig.getDataSets().then(dataSets => setDataSets(dataSets));
    }, [compositionRoot.dataStoreConfig]);

    useEffect(() => {
        compositionRoot.dataStoreConfig.getAutogenConfigSchema(dataSets, dataSetCode).then(dataSet => {
            setAutogenSchema(dataSet);
        });
    }, [compositionRoot.dataStoreConfig, dataSetCode, dataSets]);

    return { ...autogenSchema, dataSets: dataSets };
}

function getEmptyAutogenSchema(): AutogenConfigSchema {
    return {
        sections: [],
        categoryComboCodes: [],
        dataElements: [],
        constantCodes: [],
    };
}

import React from "react";
import _ from "lodash";

import { CustomDataTableCell } from "./CustomDataTables";
import { SectionStyle } from "../../../../domain/common/entities/SectionStyle";
import { DataFormInfo } from "../AutogeneratedForm";
import { DataValueNumberSingle } from "../../../../domain/common/entities/DataValue";
import { CustomInput } from "../widgets/NumberWidget";
import { DataElement } from "../../../../domain/common/entities/DataElement";

export type DataTableCellRowTotalProps = {
    styles: SectionStyle;
    dataFormInfo: DataFormInfo;
    dataElement: DataElement;
};

export const DataTableCellRowTotal: React.FC<DataTableCellRowTotalProps> = props => {
    const { dataFormInfo, dataElement, styles } = props;

    const totalValue = _(dataElement.categoryOptionCombos)
        .map(coc => {
            const deValue = dataFormInfo.data.values.get(
                {
                    ...dataElement,
                    cocId: coc.id,
                },
                {
                    categoryOptionComboId: coc.id,
                    orgUnitId: dataFormInfo.orgUnitId,
                    period: dataFormInfo.period,
                }
            ) as DataValueNumberSingle;
            return Number(deValue.value);
        })
        .compact()
        .sum();

    return (
        <CustomDataTableCell backgroundColor={styles.rows.backgroundColor} key="total-row">
            <CustomInput value={totalValue} disabled readOnly />
        </CustomDataTableCell>
    );
};
